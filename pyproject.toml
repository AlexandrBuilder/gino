[tool.poetry]
name = "gino"
version = "2.0.0-dev"
description = "GINO Is Not ORM - a Python asyncio ORM on SQLAlchemy core."
license = "BSD-3-Clause"
authors = ["Fantix King <fantix.king@gmail.com>"]
maintainers = ["Tony Wang <wwwjfy@gmail.com>", "Fantix King <fantix.king@gmail.com>"]
readme = "README.rst"
homepage = "https://python-gino.org"
repository = "https://github.com/python-gino/gino"
documentation = "https://python-gino.org/docs/"
keywords = ["orm", "asyncio", "sqlalchemy", "asyncpg", "python3"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
]

[tool.poetry.dependencies]
python = "^3.7"
#sqlalchemy = {git = "https://github.com/sqlalchemy/sqlalchemy.git"}
sqlalchemy = {path = "../sqlalchemy"}
sniffio = "^1.1.0"
trio = {version = "^0.15.0", optional = true}

# dialects
asyncpg = { version = "^0.20.1", optional = true }
aiomysql = { version = "^0.0.20", optional = true }
triopg = {git = "https://github.com/python-trio/triopg.git", optional = true}
trio-asyncio = {version = "^0.11.0", optional = true}
trio_mysql = {version = "^0.9.3", optional = true}

# compatibility
importlib_metadata = { version = "^1.3.0", python = "<3.8" }

# extensions
gino-starlette = { version = "^0.1.1", optional = true }
gino-aiohttp = { version = "^0.1.0", optional = true }
gino-tornado = { version = "^0.1.0", optional = true }
gino-sanic = { version = "^0.1.0", optional = true }
gino-quart = { version = "^0.1.0", optional = true }

[tool.poetry.extras]
postgresql = ["asyncpg"]
postgres = ["asyncpg"]
asyncpg = ["asyncpg"]
triopg = ["trio", "trio-asyncio", "triopg"]
mysql = ["aiomysql"]
aiomysql = ["aiomysql"]
trio_mysql = ["trio", "trio_mysql"]
_test = ["asyncpg", "aiomysql", "trio", "trio-asyncio", "triopg", "trio_mysql"]

# extensions
starlette = ["gino-starlette"]
aiohttp = ["gino-aiohttp"]
tornado = ["gino-tornado"]
sanic = ["gino-sanic"]
quart = ["gino-quart"]

[tool.poetry.dev-dependencies]
psycopg2-binary = "^2.8.5"

# tests
pytest = "^5.4.1"
pytest-asyncio = "^0.12.0"
pytest-trio = "^0.6.0"
pytest-mock = "^3.0.0"
pytest-cov = "^2.8.1"
pytest-virtualenv = "^1.7.0"
black = { version = "^19.10b0" }
anyio = "^1.3.0"
mypy = "^0.770"

# docs
sphinx = "^3.0.3"
sphinx-rtd-theme = "^0.4.3"
sphinxcontrib-apidoc = "^0.3.0"
sphinx-autobuild = "^0.7.1"
sphinx-intl = {extras = ["transifex"], version = "^2.0.1"}

[tool.poetry.plugins."sqlalchemy.dialects"]
"postgresql.asyncpg" = "gino.dialects.asyncpg:AsyncpgDialect"
"postgresql.asyncio" = "gino.dialects.asyncpg:AsyncpgDialect"
"asyncpg" = "gino.dialects.asyncpg:AsyncpgDialect"

"postgresql.triopg" = "gino.dialects.triopg:TriopgDialect"
"postgresql.trio" = "gino.dialects.triopg:TriopgDialect"
"triopg" = "gino.dialects.triopg:TriopgDialect"

"mysql.aiomysql" = "gino.dialects.aiomysql:AiomysqlDialect"
"mysql.asyncio" = "gino.dialects.aiomysql:AiomysqlDialect"
"aiomysql" = "gino.dialects.aiomysql:AiomysqlDialect"

"mysql.trio_mysql" = "gino.dialects.trio_mysql:TrioMysqlDialect"
"mysql.trio" = "gino.dialects.trio_mysql:TrioMysqlDialect"
"trio_mysql" = "gino.dialects.trio_mysql:TrioMysqlDialect"

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"
